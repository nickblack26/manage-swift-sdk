import Foundation

// MARK: - BoardInstance
public struct BoardInstance: Identifiable, Decodable, Sendable {
    public var id: Int
    public var name: String
    public var location: Reference?
    public var department: Reference?
    public var inactiveFlag: Bool?
    public var signOffTemplate: Reference?
    public var sendToContactFlag: Bool?
    public var contactTemplate: Reference?
    public var sendToResourceFlag: Bool?
    public var resourceTemplate: Reference?
    public var projectFlag: Bool?
    public var showDependenciesFlag: Bool?
    public var showEstimatesFlag: Bool?
    public var boardIcon: Reference?
    public var billTicketsAfterClosedFlag: Bool?
    public var billTicketSeparatelyFlag: Bool?
    public var billUnapprovedTimeExpenseFlag: Bool?
    public var overrideBillingSetupFlag: Bool?
    public var dispatchMember: Reference?
    public var serviceManagerMember: Reference?
    public var dutyManagerMember: Reference?
    public var oncallMember: Reference?
    public var workRole: Reference?
    public var workType: Reference?
    public var billTime: String?
    public var billExpense: String?
    public var billProduct: String?
    public var autoCloseStatus: Reference?
    public var autoAssignNewTicketsFlag: Bool?
    public var autoAssignNewECTicketsFlag: Bool?
    public var autoAssignNewPortalTicketsFlag: Bool?
    public var discussionsLockedFlag: Bool?
    public var timeEntryLockedFlag: Bool?
    public var notifyEmailFrom: String?
    public var notifyEmailFromName: String?
    public var closedLoopDiscussionsFlag: Bool?
    public var closedLoopResolutionFlag: Bool?
    public var closedLoopInternalAnalysisFlag: Bool?
    public var timeEntryDiscussionFlag: Bool?
    public var timeEntryResolutionFlag: Bool?
    public var timeEntryInternalAnalysisFlag: Bool?
    public var problemSort: String?
    public var resolutionSort: String?
    public var internalAnalysisSort: String?
    public var emailConnectorAllowReopenClosedFlag: Bool?
    public var emailConnectorReopenStatus: Reference?
    public var emailConnectorReopenResourcesFlag: Bool?
    public var emailConnectorNewTicketNoMatchFlag: Bool?
    public var emailConnectorNeverReopenByDaysFlag: Bool?
    public var emailConnectorReopenDaysLimit: Int?
    public var emailConnectorNeverReopenByDaysClosedFlag: Bool?
    public var emailConnectorReopenDaysClosedLimit: Int?
    public var useMemberDisplayNameFlag: Bool?
    public var sendToCCFlag: Bool?
    public var autoAssignTicketOwnerFlag: Bool?
    public var autoAssignLimitFlag: Bool?
    public var autoAssignLimitAmount: Int?
    public var closedLoopAllFlag: Bool?
    public var percentageCalculation: String?
    public var allSort: String?
    public var markFirstNoteIssueFlag: Bool?
    public var restrictBoardByDefaultFlag: Bool?
    public var sendToBundledFlag: Bool?
    // public var info: Info?

    public enum CodingKeys: String, CodingKey {
        case id = "id"
        case name = "name"
        case location = "location"
        case department = "department"
        case inactiveFlag = "inactiveFlag"
        case signOffTemplate = "signOffTemplate"
        case sendToContactFlag = "sendToContactFlag"
        case contactTemplate = "contactTemplate"
        case sendToResourceFlag = "sendToResourceFlag"
        case resourceTemplate = "resourceTemplate"
        case projectFlag = "projectFlag"
        case showDependenciesFlag = "showDependenciesFlag"
        case showEstimatesFlag = "showEstimatesFlag"
        case boardIcon = "boardIcon"
        case billTicketsAfterClosedFlag = "billTicketsAfterClosedFlag"
        case billTicketSeparatelyFlag = "billTicketSeparatelyFlag"
        case billUnapprovedTimeExpenseFlag = "billUnapprovedTimeExpenseFlag"
        case overrideBillingSetupFlag = "overrideBillingSetupFlag"
        case dispatchMember = "dispatchMember"
        case serviceManagerMember = "serviceManagerMember"
        case dutyManagerMember = "dutyManagerMember"
        case oncallMember = "oncallMember"
        case workRole = "workRole"
        case workType = "workType"
        case billTime = "billTime"
        case billExpense = "billExpense"
        case billProduct = "billProduct"
        case autoCloseStatus = "autoCloseStatus"
        case autoAssignNewTicketsFlag = "autoAssignNewTicketsFlag"
        case autoAssignNewECTicketsFlag = "autoAssignNewECTicketsFlag"
        case autoAssignNewPortalTicketsFlag = "autoAssignNewPortalTicketsFlag"
        case discussionsLockedFlag = "discussionsLockedFlag"
        case timeEntryLockedFlag = "timeEntryLockedFlag"
        case notifyEmailFrom = "notifyEmailFrom"
        case notifyEmailFromName = "notifyEmailFromName"
        case closedLoopDiscussionsFlag = "closedLoopDiscussionsFlag"
        case closedLoopResolutionFlag = "closedLoopResolutionFlag"
        case closedLoopInternalAnalysisFlag = "closedLoopInternalAnalysisFlag"
        case timeEntryDiscussionFlag = "timeEntryDiscussionFlag"
        case timeEntryResolutionFlag = "timeEntryResolutionFlag"
        case timeEntryInternalAnalysisFlag = "timeEntryInternalAnalysisFlag"
        case problemSort = "problemSort"
        case resolutionSort = "resolutionSort"
        case internalAnalysisSort = "internalAnalysisSort"
        case emailConnectorAllowReopenClosedFlag = "emailConnectorAllowReopenClosedFlag"
        case emailConnectorReopenStatus = "emailConnectorReopenStatus"
        case emailConnectorReopenResourcesFlag = "emailConnectorReopenResourcesFlag"
        case emailConnectorNewTicketNoMatchFlag = "emailConnectorNewTicketNoMatchFlag"
        case emailConnectorNeverReopenByDaysFlag = "emailConnectorNeverReopenByDaysFlag"
        case emailConnectorReopenDaysLimit = "emailConnectorReopenDaysLimit"
        case emailConnectorNeverReopenByDaysClosedFlag = "emailConnectorNeverReopenByDaysClosedFlag"
        case emailConnectorReopenDaysClosedLimit = "emailConnectorReopenDaysClosedLimit"
        case useMemberDisplayNameFlag = "useMemberDisplayNameFlag"
        case sendToCCFlag = "sendToCCFlag"
        case autoAssignTicketOwnerFlag = "autoAssignTicketOwnerFlag"
        case autoAssignLimitFlag = "autoAssignLimitFlag"
        case autoAssignLimitAmount = "autoAssignLimitAmount"
        case closedLoopAllFlag = "closedLoopAllFlag"
        case percentageCalculation = "percentageCalculation"
        case allSort = "allSort"
        case markFirstNoteIssueFlag = "markFirstNoteIssueFlag"
        case restrictBoardByDefaultFlag = "restrictBoardByDefaultFlag"
        case sendToBundledFlag = "sendToBundledFlag"
        // case info = "_info"
    }
}
